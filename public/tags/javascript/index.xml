<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Kyle Lieber</title>
    <link>http://kylelieber.com/tags/javascript/index.xml</link>
    <description>Recent content in Javascript on Kyle Lieber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://kylelieber.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Angular transclude directive and ng-if</title>
      <link>http://kylelieber.com/2016/04/angular-transclude-directive-and-ng-if</link>
      <pubDate>Mon, 11 Apr 2016 18:20:52 -0500</pubDate>
      
      <guid>http://kylelieber.com/2016/04/angular-transclude-directive-and-ng-if</guid>
      <description>&lt;p&gt;As I continue to dive further and further into Angular development it never ceases to amaze me how quickly I can get tripped up by directives.  This is just something I learned last week about using a custom transclude function and an &lt;code&gt;ng-if&lt;/code&gt; on a directive.
&lt;/p&gt;

&lt;p&gt;Originally, I had a directive that look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;angular.module(&#39;app&#39;)
  .directive(&#39;uiField&#39;, function(UiFieldService) {
    return {
      restrict: &#39;EA&#39;,
      template:
      `&amp;lt;div ng-show=&amp;quot;field.render&amp;quot;&amp;gt;
        &amp;lt;label for=&amp;quot;{{field.code}}&amp;quot; ng-bind=&amp;quot;field.label&amp;quot;&amp;gt;&amp;lt;/label&amp;gt;
        &amp;lt;div ng-transclude&amp;gt;&amp;lt;/div&amp;gt;
       &amp;lt;/div&amp;gt;`,
      transclude: true,
      scope: {
        code: &#39;@&#39;
      },
      link: function(scope) {
        scope.field = UiFieldService.getField(scope.code);
      }
    };
  }
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, I wanted to make my &lt;code&gt;field&lt;/code&gt; object available to the transcluded element so I can do something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;ui-field code=&amp;quot;name&amp;quot;&amp;gt;
  &amp;lt;input name=&amp;quot;{{field.code}}&amp;quot; type=&amp;quot;text&amp;quot; ng-model=&amp;quot;person.name&amp;quot; /&amp;gt;
&amp;lt;/ui-field&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, I changed it to use a custom transclude function like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;angular.module(&#39;app&#39;)
  .directive(&#39;uiField&#39;, function(UiFieldService) {
    return {
      restrict: &#39;EA&#39;,
      template:
      `&amp;lt;div ng-show=&amp;quot;field.render&amp;quot;&amp;gt;
        &amp;lt;label for=&amp;quot;{{field.code}}&amp;quot; ng-bind=&amp;quot;field.label&amp;quot;&amp;gt;&amp;lt;/label&amp;gt;
        &amp;lt;div ui-field-transclude&amp;gt;&amp;lt;/div&amp;gt;
       &amp;lt;/div&amp;gt;`,
      transclude: true,
      scope: {
        code: &#39;@&#39;
      },
      link: function(scope, element, attrs, ctrl, transclude) {
        scope.field = UiFieldService.getField(scope.code);

        transclude(function(clone, transcludeScope) {
          transcludeScope.field = scope.field;
          element.find(&#39;*[ui-field-transclude]&#39;).append(clone);
        });
      }
    };
  }
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This worked fine.  I wanted to change the &lt;code&gt;ng-show&lt;/code&gt; in the template to an &lt;code&gt;ng-if&lt;/code&gt; so that any fields not rendered are not generated at all.  Of course, after making that change then my &lt;code&gt;input&lt;/code&gt; element was no longer being rendered. The problem with it is that the &lt;code&gt;ng-if&lt;/code&gt; causes it&amp;rsquo;s child elements to be removed so when I try to find the element with the &lt;code&gt;ui-field-tranclude&lt;/code&gt; attribute, nothing is there.&lt;/p&gt;

&lt;p&gt;After, struggling to find a solution I realized that if I was still using &lt;code&gt;ng-transclude&lt;/code&gt; instead of my custom transclude function then the &lt;code&gt;ng-if&lt;/code&gt; worked just fine.  So I decided to take a look at the source code for &lt;code&gt;ng-tranclude&lt;/code&gt;. It turns out that if you have &lt;code&gt;transclude: true&lt;/code&gt; on your directive the transclude function is available in the linking function of any child directive in your template. So, I just needed a second directive:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;angular.module(&#39;app&#39;)
  .directive(&#39;uiField&#39;, function(UiFieldService) {
    return {
      restrict: &#39;EA&#39;,
      template:
      `&amp;lt;div ng-if=&amp;quot;field.render&amp;quot;&amp;gt;
        &amp;lt;label for=&amp;quot;{{field.code}}&amp;quot; ng-bind=&amp;quot;field.label&amp;quot;&amp;gt;&amp;lt;/label&amp;gt;
        &amp;lt;div ui-field-transclude&amp;gt;&amp;lt;/div&amp;gt;
       &amp;lt;/div&amp;gt;`,
      transclude: true,
      scope: {
        code: &#39;@&#39;
      },
      link: function(scope, element, attrs, ctrl, transclude) {
        scope.field = UiFieldService.getField(scope.code);
      }
    };
  }
  .directive(&#39;uiFieldTransclude&#39;, function() {
    return {
      restrict: &#39;EA&#39;,
      link: function(scope, element, attrs, ctrl, transclude) {
        transclude(function(clone, transcludeScope) {
          transcludeScope.field = scope.field;
          element.append(clone);
        });
      }
    };
  }
);
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>PhantomJS Maven Plugin 0.3</title>
      <link>http://kylelieber.com/2014/05/phantomjs-maven-plugin-0-dot-3</link>
      <pubDate>Fri, 02 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kylelieber.com/2014/05/phantomjs-maven-plugin-0-dot-3</guid>
      <description>&lt;p&gt;I just released &lt;a href=&#34;https://github.com/klieber/phantomjs-maven-plugin/releases/tag/phantomjs-maven-plugin-0.3&#34;&gt;version 0.3&lt;/a&gt; of the &lt;a href=&#34;http://kylelieber.com/phantomjs-maven-plugin&#34;&gt;phantomjs-maven-plugin&lt;/a&gt; and I thought it was about time I wrote a blog post about this project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://phantomjs.org&#34;&gt;PhantomJS&lt;/a&gt; is a headless WebKit implementation that is extremely useful for tasks like headless website testing, screen capture, page automation, network monitoring, and more. Much of my experience with PhantomJS comes from my work on the &lt;a href=&#34;http://searls.github.io/jasmine-maven-plugin&#34;&gt;jasmine-maven-plugin&lt;/a&gt;.  In version &lt;code&gt;1.3.1.1&lt;/code&gt; of the plugin we added support for using PhantomJS instead of &lt;a href=&#34;http://htmlunit.sourceforge.com&#34;&gt;HtmlUnit&lt;/a&gt; to execute &lt;a href=&#34;http://jasmine.github.io/&#34;&gt;Jasmine&lt;/a&gt; specs. The only downside to using PhantomJS with the plugin is that you had to have PhantomJS already installed on your system. For those of us in the Maven world that seems a little odd since Maven is suppose to download all of our dependencies for us. But of course, usually those dependencies are platform-independent java libraries. PhantomJS, on the other hand, requires install platform-dependent compiled binaries.

``
Well after a few months of explaining to users and friends that they needed to have PhantomJS pre-installed and there was no good way to have it installed automatically, I decided I need to fix that. So, I took some inspiration from the work done on the &lt;a href=&#34;https://github.com/qa/arquillian-phantom-driver&#34;&gt;Arquillian Phantom Driver&lt;/a&gt; and wrote the &lt;a href=&#34;http://kylelieber.com/phantomjs-maven-plugin&#34;&gt;phantomjs-maven-plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The plugin works by first determining the current OS and architecture type that it is running on and then downloading the appropriate version of the PhantomJS binaries. It also sets a property indicating the location of the executable.  The versions of the plugin prior to &lt;code&gt;0.3&lt;/code&gt; would download the binaries directly from either googlecode or bitbucket where PhantomJS hosts them.  This latest version now downloads them via maven&amp;rsquo;s central repository (downloading directly is still an option) which is great because it helps avoid firewall issues and allows for easy caching.&lt;/p&gt;

&lt;p&gt;The plugin also features a &lt;a href=&#34;http://kylelieber.com/phantomjs-maven-plugin/exec-mojo.html&#34;&gt;goal for executing&lt;/a&gt; PhantomJS scripts so you can easily install and execute PhantomJS scripts inside your maven build.&lt;/p&gt;

&lt;p&gt;You can see an example usage of the plugin with the jasmine-maven-plugin &lt;a href=&#34;http://kylelieber.com/phantomjs-maven-plugin/&#34;&gt;here&lt;/a&gt;.  I&amp;rsquo;m working on getting more documentation out there so until then you can also look at the &lt;a href=&#34;https://github.com/klieber/phantomjs-maven-plugin/tree/master/src/it&#34;&gt;sample projects&lt;/a&gt; I use for the plugins integration tests.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been having a hard time keeping up on this and the jasmine-maven-plugin lately (partly because I need a new laptop terribly) but I hope to begin making regular commits again soon. Thank you for your patience.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jasmine Maven Plugin 1.3.1.0 - My First Release</title>
      <link>http://kylelieber.com/2013/03/jasmine-maven-plugin-1-3-1-0-my-first-release</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://kylelieber.com/2013/03/jasmine-maven-plugin-1-3-1-0-my-first-release</guid>
      <description>&lt;p&gt;I began using the the &lt;a href=&#34;http://searls.github.com/jasmine-maven-plugin&#34;&gt;Jasmine Maven Plugin&lt;/a&gt; in June of 2012 and was immediately impressed with how well it worked and how easy it made automating my test execution. Soon after I discovered &lt;a href=&#34;http://requirejs.org&#34;&gt;require.js&lt;/a&gt; and decided to begin using it in my applications. I learned quickly however that the require.js support in the Jasmine Maven Plugin had quite a few issues and so I decided to try and help fix some of them.

Fast-forward to January of this year and I found myself a maintainer of the plugin with full commit access and a huge list of issues (thank you &lt;a href=&#34;http://about.me/searls&#34;&gt;Justin Searls&lt;/a&gt; for the opportunity). I&amp;rsquo;ve had a few goals for my first release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;don&amp;rsquo;t break anything (still crossing my fingers on this one)&lt;/li&gt;
&lt;li&gt;make spec runner templates more useful by providing more variables&lt;/li&gt;
&lt;li&gt;merge the require.js specific code into the default code&lt;/li&gt;
&lt;li&gt;make the behavior of the &lt;code&gt;jasmine:bdd&lt;/code&gt; goal and the &lt;code&gt;jasmine:test&lt;/code&gt; goal consistent&lt;/li&gt;
&lt;li&gt;improve overall code quality and setup checks to monitor and measure code quality&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m happy to say that version 1.3.1.0 is out and while only time will tell if I didn&amp;rsquo;t break anything and improving code quality is ongoing, I am confident that I achieved my goals. For a full list of bug fixes and enhancements in 1.3.1.0 go &lt;a href=&#34;http://searls.github.com/jasmine-maven-plugin/github-report.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please check out the &lt;a href=&#34;http://searls.github.com/jasmine-maven-plugin/&#34;&gt;new site&lt;/a&gt; for information on usage of the plugin and post any &lt;a href=&#34;https://github.com/searls/jasmine-maven-plugin/issues&#34;&gt;issues you find on github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/searls/jasmine-maven-plugin/issues?milestone=2&#34;&gt;next release&lt;/a&gt; is planned for a little over a month from now and will have some new exciting features including support for using &lt;a href=&#34;http://phantomjs.org/&#34;&gt;PhantomJS&lt;/a&gt; rather than HtmlUnit for headless test execution.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>